name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']

    steps:
    - uses: actions/checkout@v3

    - name: Install go
      uses: actions/setup-go@v3
      with:
        go-version: 1.16.3
      id: go

    - name: Install singularity dependencies
      run: |
       sudo apt-get update && sudo apt-get install -y \
        build-essential \
        libssl-dev \
        uuid-dev \
        libgpgme11-dev \
        squashfs-tools \
        libseccomp-dev \
        pkg-config

    - name: Install singularity
      env:
        SINGULARITY_VERSION: 3.7.3
        GOPATH: /tmp/go
      run: |
        mkdir -p $GOPATH
        sudo mkdir -p /usr/local/var/singularity/mnt && \
        mkdir -p $GOPATH/src/github.com/sylabs && \
        cd $GOPATH/src/github.com/sylabs && \
        wget -qO- https://codeload.github.com/sylabs/singularity/tar.gz/refs/tags/v${SINGULARITY_VERSION} | \
        tar -xz && \
        cd singularity-${SINGULARITY_VERSION} && \
        echo ${SINGULARITY_VERSION} > VERSION && \
        ./mconfig -p /usr/local && \
        make -C builddir && \
        sudo make -C builddir install

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

        # Adding `poetry` to `$PATH`:
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH

    - name: Set up cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

    - name: Show pip version
      run: |
        poetry run pip -V

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run checks
      run: |
        make test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
